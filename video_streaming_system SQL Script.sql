-- MySQL Script generated by MySQL Workbench
-- Tue Jun  2 20:21:13 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema video_streaming_system
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema video_streaming_system
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `video_streaming_system` ;
USE `video_streaming_system` ;

-- -----------------------------------------------------
-- Table `video_streaming_system`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(32) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `mail` VARCHAR(64) NOT NULL,
  `register_date` DATE GENERATED ALWAYS AS () VIRTUAL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`user_role` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  INDEX `role_id_fk_idx` (`role_id` ASC) VISIBLE,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `video_streaming_system`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role_id_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `video_streaming_system`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`media` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(64) NOT NULL,
  `description` VARCHAR(255) NULL,
  `link` VARCHAR(255) NOT NULL,
  `views` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`media_premium`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`media_premium` (
  `media_id` INT NOT NULL,
  `is_premium` TINYINT NULL,
  PRIMARY KEY (`media_id`),
  CONSTRAINT `media_id_fk`
    FOREIGN KEY (`media_id`)
    REFERENCES `video_streaming_system`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`comment` (
  `media_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `content` VARCHAR(255) NOT NULL,
  `added_date` DATE NOT NULL,
  PRIMARY KEY (`media_id`),
  INDEX `user_id_fk_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `media_id_fk`
    FOREIGN KEY (`media_id`)
    REFERENCES `video_streaming_system`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `video_streaming_system`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`media_rate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`media_rate` (
  `media_id` INT NOT NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  PRIMARY KEY (`media_id`),
  CONSTRAINT `media_id_fk`
    FOREIGN KEY (`media_id`)
    REFERENCES `video_streaming_system`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`playlist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(64) NOT NULL,
  `views` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`media_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`media_playlist` (
  `media_id` INT NOT NULL,
  `playlist_id` INT NOT NULL,
  PRIMARY KEY (`media_id`),
  INDEX `playlist_id_fk_idx` (`media_id` ASC, `playlist_id` ASC) VISIBLE,
  CONSTRAINT `media_id_fk`
    FOREIGN KEY (`media_id`)
    REFERENCES `video_streaming_system`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `playlist_id_fk`
    FOREIGN KEY (`media_id` , `playlist_id`)
    REFERENCES `video_streaming_system`.`playlist` (`id` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`subscription` (
  `user_id` INT NOT NULL,
  `expiry_date` DATE NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `video_streaming_system`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `video_streaming_system`.`payment_method`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `video_streaming_system`.`payment_method` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `is_available` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
